on:
  push:
    # Sequence of patterns matched against refs/tags
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_on_centos:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 40
      matrix:
        # target: [base,bin,chain,chainbin,cudadecoder,cudadecoderbin,cudafeat,cudafeatbin,cudamatrix,decoder,doc,feat,featbin,fgmmbin,fstbin,fstext,gmm,gmmbin,gst-plugin,hmm,itf,ivector,ivectorbin,kws,kwsbin,lat,latbin,lm,lmbin,makefiles,matrix,nnet,nnet2,nnet2bin,nnet3,nnet3bin,nnetbin,online,online2,online2bin,onlinebin,probe,rnnlm,rnnlmbin,sgmm2,sgmm2bin,tfrnnlm,tfrnnlmbin,transform,tree,util]
        # target: [base,bin,chain,chainbin,decoder,feat,featbin,fgmmbin,fstbin,fstext,gmm,gmmbin,hmm,ivector,ivectorbin,kws,kwsbin] 
        #target: [lat,latbin,lm,lmbin,matrix,nnet,nnet2,nnet2bin,nnet3,nnet3bin,nnetbin,online,online2,online2bin,onlinebin,rnnlm,rnnlmbin,sgmm2,sgmm2bin,tfrnnlm,tfrnnlmbin,transform,tree,util]
        target: [bin, chainbin, featbin, fgmmbin, fstbin, gmmbin, ivectorbin, kwsbin, latbin, lmbin, nnet2bin, nnet3bin, nnetbin, online2bin, onlinebin, rnnlmbin, sgmm2bin, tfrnnlmbin]
        kaldi: [59299d1cf95b72bb109d583947d9e9ece19aa6dc]
    container:
      image: centos:7
      env:
        CC: /opt/rh/devtoolset-7/root/usr/bin/gcc
        CXX: /opt/rh/devtoolset-7/root/usr/bin/g++
        MAKE: /opt/rh/devtoolset-7/root/usr/bin/make
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          yum install -y centos-release-scl
          yum-config-manager --enable rhel-server-rhscl-7-rpms
          yum install -y devtoolset-7-gcc-c++ devtoolset-7-make devtoolset-7-gcc-gfortran
          yum install -y sox ncurses-devel libtool automake autoconf git subversion
          yum install -y bzip2 wget which unzip bc patch python2
          yum install -y zlib-devel
          yum install -y sudo
      - name: Install portaudio
        if: ${{ matrix.target }} == online
        run: |
          wget http://portaudio.com/archives/pa_stable_v190600_20161030.tgz
          tar zxvf pa_stable_v190600_20161030.tgz
          cd portaudio && ./configure && PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}" make && PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}" make install
      - name: run.sh
        shell: bash
        run: |
          PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}" ./run.sh ${{ matrix.target }} ${{ matrix.kaldi }}
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          rm -r kaldi/src/${{ matrix.target }}/*.cc kaldi/src/${{ matrix.target }}/*.o
          tar -zcvf kaldi-${{ matrix.kaldi }}-${{ matrix.target }}-linux-x64-libc2_17.tar.gz kaldi/src/${{ matrix.target }}
